#!/usr/bin/env python
"""CI host operations"""

import json
import re
from argparse import ArgumentParser
from io import StringIO
from os import environ
from os.path import expanduser
from subprocess import PIPE, run

ssh_cfg_file = expanduser('~/.ssh/config')
gcloud_project = environ.get('GCLOUD_PROJECT', 'pivotal-gearbox-188814')
host_name = 'nuclio-ci'


def set_ip(ip):
    buf = StringIO()
    in_host = False
    with open(ssh_cfg_file) as fp:
        for line in fp:
            match = re.search('^Host\s+([0-9A-Z_a-z-]+)', line)
            if match:
                in_host = match.group(1) == host_name
            elif in_host:
                match = re.search('^\s+HostName\s+', line)
                if match:
                    line = f'{match.group()}{ip}\n'
            buf.write(line)

    with open(ssh_cfg_file, 'w') as out:
        out.write(buf.getvalue())


def start():
    cmd = [
        'gcloud',
        '--project', gcloud_project,
        'compute', 'instances', 'start', host_name,
    ]
    rc = run(cmd).returncode
    if rc != 0:
        raise SystemExit(rc)

    cmd = [
        'gcloud',
        '--format', 'json',
        '--project', gcloud_project,
        'compute', 'instances', 'list',
    ]

    proc = run(cmd, stdout=PIPE)
    if proc.returncode != 0:
        raise SystemExit(proc.returncode)

    for host in json.loads(proc.stdout.decode('utf-8')):
        if host['name'] != host_name:
            continue
        ip = host['networkInterfaces'][0]['accessConfigs'][0]['natIP']
        set_ip(ip)
        break
    else:
        raise SystemExit('error: cannot find IP')


def stop():
    cmd = [
        'gcloud',
        '--project', gcloud_project,
        'compute', 'instances', 'stop', host_name,
    ]
    rc = run(cmd).returncode
    if rc != 0:
        raise SystemExit(rc)


parser = ArgumentParser(description=__doc__)
parser.add_argument('command', help='command', choices=['start', 'stop'])
args = parser.parse_args()

if args.command == 'start':
    start()
else:
    stop()
